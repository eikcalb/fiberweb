{"version":3,"sources":["pages/Search.jsx","App.js","components/toolbar.jsx","lib/index.js","lib/adapter.js","components/Github.jsx","serviceWorker.js","index.js"],"names":["Search","data","totalCount","triggerSearch","addToast","useToasts","Number","parseInt","toFixed","Toolbar","query","catch","e","message","color","className","length","map","user","key","id","to","login","src","avatar_url","alt","title","target","href","html_url","SearchBox","callback","React","useState","searchText","updateText","timeout","timeID","undefined","context","this","clearTimeout","setTimeout","apply","arguments","createDebouncer","val","AppContext","Consumer","onSubmit","ev","preventDefault","stopPropagation","maxLength","type","value","onChange","placeholder","isNotFixed","noShowSearch","isActive","updateActie","onClick","activeClassName","exact","DEFAULT_CONFIG","appName","appVersion","description","author","apiEndpoint","Adapter","config","Error","page","menus","repos","followings","followers","starred","Collection","collection","replace","path","render","props","Repos","icon","fork","name","link","Followings","Followers","Starred","Item","username","ready","updateReady","updateUser","lib","getUser","then","res","a","getRepos","getFollowers","getFollowing","getStarred","bio","email","blog","location","public_repos","following","max","octo","Octo","userAgent","search","users","q","order","per_page","sort","getByUsername","listFollowersForUser","listFollowingForUser","listForUser","direction","activity","listReposStarredByUser","createContext","App","state","adapter","match","params","searchUsers","setState","items","total_count","console","log","error","Promise","reject","Component","Boolean","window","hostname","ReactDOM","basename","placement","transitionDuration","document","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.ff9f28ae.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Toolbar from \"../components/toolbar\";\r\nimport { createDebouncer, AppContext } from \"../App\";\r\nimport { FaSearch, FaExternalLinkSquareAlt } from \"react-icons/fa\";\r\nimport { FiMeh } from \"react-icons/fi\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { useToasts } from \"react-toast-notifications\";\r\n\r\n\r\nexport function Search({ data, totalCount, triggerSearch }) {\r\n    let numPages = 1\r\n    let { addToast } = useToasts()\r\n    if (totalCount > 100) {\r\n        numPages = Number.parseInt((totalCount / 100).toFixed(0), 10)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <Toolbar triggerSearch={(query) => { return triggerSearch(query).catch(e => addToast(e.message, { color: 'error' })) }} />\r\n            <div className=\"section\">\r\n                <div className='hero is-fullheight is-bold'>\r\n                    <div className='hero-head'>\r\n\r\n                    </div>\r\n                    <div className='hero-body'>\r\n                        <div className='container'>\r\n                            {data.length > 0 ?\r\n                                data.map(user => {\r\n                                    return (\r\n                                        <div key={user.id} className=\"card\">\r\n                                            <div className=\"card-content\">\r\n                                                <div className=\"media\">\r\n                                                    <div className=\"media-left\">\r\n                                                        <NavLink to={`users/${user.login}`}>\r\n                                                            <figure className=\"image is-32x32\">\r\n                                                                <img className='is-rounded' src={user.avatar_url} alt={user.login || 'John Doe'} />\r\n                                                            </figure>\r\n                                                        </NavLink>\r\n                                                    </div>\r\n                                                    <div className=\"media-content is-clipped\">\r\n                                                        <NavLink to={`users/${user.login}`}>\r\n                                                            <p className=\"title is-4\">{user.login}</p>\r\n                                                        </NavLink>\r\n                                                    </div>\r\n                                                    <div className=\"media-right\">\r\n                                                        <a title='View on Github' target='_blank' href={user.html_url}><FaExternalLinkSquareAlt /></a>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </div>\r\n                                        </div>\r\n                                    )\r\n                                }) :\r\n                                <div className=\"notification has-text-centered\">\r\n                                    <h1 className='title is-size-1 has-text-danger'><FiMeh /></h1>\r\n                                    <h4 className='title is-size-3'>Nothing to show for now!</h4>\r\n                                    <span className='subtitle'>Use the searchbar to find Github users.</span>\r\n                                </div>\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport function SearchBox({ callback }) {\r\n\r\n    let [searchText, updateText] = React.useState('')\r\n    /**\r\n     *  triggerSearch is a debouncer for delaying search triggers within the application. \r\n     *  This way, searches will happen after a certain period from last input event.\r\n     */\r\n    const triggerSearch = createDebouncer((val) => {\r\n        callback(val)\r\n    }, 500)\r\n\r\n\r\n    return (\r\n        <AppContext.Consumer>{context =>\r\n            <form onSubmit={ev => { ev.preventDefault(); ev.stopPropagation(); triggerSearch(searchText) }}>\r\n                <div className='field has-addons is-centered'>\r\n                    <div className=\"control has-icons-left has-icons-right\">\r\n                        <input maxLength={256} className=\"input is-rounded\" type=\"text\" value={searchText} onChange={ev => { updateText(ev.target.value) }} placeholder=\"Search for Github user...\" />\r\n                        <span className='icon is-left is-small'>\r\n                            <FaSearch />\r\n                        </span>\r\n                    </div>\r\n                    <div className=\"control\">\r\n                        <button type='submit' className=\"input is-rounded button is-success\" type=\"text\" >Search</button>\r\n                    </div>\r\n\r\n                </div> </form>\r\n        }\r\n        </AppContext.Consumer>\r\n    )\r\n}","import React from 'react';\r\nimport { Route, Switch } from \"react-router-dom\";\r\nimport './App.css';\r\nimport { ErrorPage } from \"./pages/Error\";\r\nimport { Search } from \"./pages/Search\";\r\nimport { FaHeart, FaMapMarker } from 'react-icons/fa';\r\nimport OctoAdapter from './lib/adapter';\r\nimport Github from './components/Github';\r\n\r\nexport const lib = new OctoAdapter()\r\nexport const AppContext = React.createContext({ lib })\r\n\r\n/**\r\n * App is the root of this application and contains the required logic for communication and state management.\r\n */\r\nclass App extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.adapter = lib\r\n    }\r\n\r\n    state = {\r\n        users: [],\r\n        totalCount: 0\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className='is-clipped container is-widescreen'>\r\n                    <Switch>\r\n                        <Route path='/users/:username' render={({ match }) => {\r\n                            return (\r\n                                <Github username={match.params.username} />\r\n                            )\r\n                        }} />\r\n\r\n                        <Route render={() => <Search data={this.state.users} totalCount={this.state.totalCount} triggerSearch={async (q, page) => {\r\n                            if (q == \"\") return\r\n                            try {\r\n                                let res = await this.adapter.searchUsers(q, page)\r\n                                this.setState({ users: res.data.items, totalCount: res.data.total_count })\r\n                                console.log(res)\r\n                            } catch (e) {\r\n                                console.error(e)\r\n                                return Promise.reject(e)\r\n                            }\r\n\r\n                        }} />} />\r\n\r\n                    </Switch>\r\n                </div>\r\n\r\n                <footer>\r\n                    <div className=\"content has-text-centered\">\r\n                        <p>\r\n                            <strong>Fiber</strong> by <a href=\"mailto:agwaisraelonome@gmail.com\">eikcalb</a> with <FaHeart className='has-text-danger' /> from <FaMapMarker /> Lagos\r\n                    </p>\r\n                    </div>\r\n                </footer>\r\n            </>\r\n        );\r\n\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * \r\n * @param {function} callback curried function to debounce.\r\n * @param {int} timeout debounce duration.\r\n */\r\nexport function createDebouncer(callback, timeout = 300) {\r\n    let timeID = undefined\r\n    let context = this\r\n\r\n    return function debouncer() {\r\n        clearTimeout(timeID)\r\n        timeID = setTimeout(() => callback.apply(context, arguments), timeout)\r\n    }\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport { FaHome } from \"react-icons/fa\";\r\nimport { NavLink } from 'react-router-dom';\r\nimport { SearchBox } from '../pages/Search';\r\n\r\nexport default function Toolbar({ isNotFixed, triggerSearch, noShowSearch }) {\r\n    let [isActive, updateActie] = React.useState(false)\r\n    return (\r\n        <nav className={`navbar has-shadow is-centered ${isNotFixed ? '' : 'is-fixed-top'}`}>\r\n            <div className=\"navbar-brand\">\r\n                <span className=\"navbar-item has-text-weight-bold\">fibre</span>\r\n                {noShowSearch ? null : <span className='navbar-item'><SearchBox callback={triggerSearch} /></span>}\r\n                <span onClick={() => updateActie(!isActive)} className={`navbar-burger burger ${isActive ? 'is-active' : ''}`}>\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </span>\r\n            </div>\r\n            <div className={`navbar-menu ${isActive ? 'is-active' : ''}`}>\r\n                <div className=\"navbar-end\">\r\n                    <NavLink activeClassName='is-active' exact to='/' className='navbar-item'>\r\n                        <FaHome />&emsp;Home\r\n                </NavLink>\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}","\r\nexport const DEFAULT_CONFIG = {\r\n    appName: 'fibre',\r\n    appVersion: '1.0.0',\r\n    description: 'fibre is a Github user search application. With fibre, you may find Github users and information about their work.',\r\n    author: 'eikcalb',\r\n    apiEndpoint: 'https://api.github.com/'\r\n}","import Octo from \"@octokit/rest\";\r\nimport { DEFAULT_CONFIG } from \".\";\r\n\r\n/**\r\n * Adapter creates an abstraction between resource fetching mechanisms and normal application funcionality.\r\n * \r\n * This provides various benefits, along with the ability to make request sensitive decision, like caching,\r\n * within each adapter.\r\n * \r\n * Use of this class is forbidden, this class must be extended!!!!!!!\r\n * \r\n * Direct use of this class will throw an Error.\r\n * \r\n */\r\n\r\nexport class Adapter {\r\n    // I really wish this was a TypeScript environment... Oh well!\r\n\r\n\r\n    config = DEFAULT_CONFIG\r\n\r\n    constructor(config) {\r\n\r\n    }\r\n\r\n\r\n    /**\r\n     * Fetches information about a user.\r\n     * \r\n     * @param {string} user username of user to fetch.\r\n     */\r\n    getUser(user) {\r\n        throw new Error('Not implemented! Extend this class!!')\r\n    }\r\n\r\n    getRepos(user, page) {\r\n        throw new Error('Not implemented! Extend this class!!')\r\n    }\r\n\r\n    getFollowers(user, page) {\r\n        throw new Error('Not implemented! Extend this class!!')\r\n    }\r\n\r\n    getFollowing(user, page) {\r\n        throw new Error('Not implemented! Extend this class!!')\r\n    }\r\n\r\n    getStarred(user, page) {\r\n        throw new Error('Not implemented! Extend this class!!')\r\n    }\r\n\r\n    searchUsers(query, page) {\r\n        throw new Error('Not implemented! Extend this class!!')\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * FetchAdapter is the default adapter used for resourse management in fibre.\r\n * \r\n * ... no time!\r\n * \r\n * Creating adapter for @Octokit instead.\r\n */\r\nexport class FetchAdapter extends Adapter {\r\n\r\n    buildFetch() {\r\n\r\n    }\r\n\r\n    getRepos() {\r\n    }\r\n\r\n}\r\n\r\n\r\n/**\r\n * OctoAdapter is a container for app functinality. \r\n * This is used by the @see App root component for making necessary actions and is passed to child components that require this class.\r\n * \r\n * Network requests are made over an abstraction layer, Adapter.\r\n * These Adapters implement a similar interface and ensure loose-coupling the functions of fibre and resource fetching mechanisms.\r\n * \r\n */\r\n\r\nexport default class OctoAdapter extends Adapter {\r\n\r\n    constructor(config) {\r\n        super(config)\r\n        this.octo = new Octo({\r\n            userAgent: `${DEFAULT_CONFIG.appName}/${DEFAULT_CONFIG.appVersion}`\r\n        })\r\n    }\r\n\r\n    searchUsers(query, page) {\r\n        return this.octo.search.users({\r\n            q: query,\r\n            order: 'asc',\r\n            per_page: 100,\r\n            sort: 'repositories',\r\n            page\r\n        })\r\n    }\r\n\r\n    getUser(user) {\r\n        return this.octo.users.getByUsername({\r\n            username: user\r\n        })\r\n    }\r\n\r\n    getFollowers(user, page = 1) {\r\n        return this.octo.users.listFollowersForUser({\r\n            username: user,\r\n            per_page: 100,\r\n            page\r\n        })\r\n    }\r\n\r\n    getFollowing(user, page = 1) {\r\n        return this.octo.users.listFollowingForUser({\r\n            username: user,\r\n            per_page: 100,\r\n            page\r\n        })\r\n    }\r\n\r\n    getRepos(user, page = 1) {\r\n        return this.octo.repos.listForUser({\r\n            username: user,\r\n            per_page: 100,\r\n            type: 'all',\r\n            sort: 'full_name',\r\n            direction: 'asc',\r\n            page\r\n        })\r\n    }\r\n\r\n    getStarred(user, page = 1) {\r\n        return this.octo.activity.listReposStarredByUser({\r\n            username: user,\r\n            per_page: 100,\r\n            sort: 'updated',\r\n            direction: 'desc',\r\n            page\r\n        })\r\n    }\r\n\r\n}\r\n\r\n","import React from \"react\";\r\nimport { FaBook, FaCodeBranch, FaEnvelope, FaGlobe, FaMapMarker, FaStar } from \"react-icons/fa\";\r\nimport { NavLink, Route } from 'react-router-dom';\r\nimport { lib } from \"../App\";\r\nimport Toolbar from \"./toolbar\";\r\n\r\n\r\nclass Github {\r\n    personal = null\r\n    bio = \"\"\r\n    followings = []\r\n    followers = []\r\n    starred = []\r\n    repos = []\r\n    id = 0\r\n}\r\n\r\nexport const menus = {\r\n    repos: 'Repos',\r\n    followings: 'Followings',\r\n    followers: 'Followers',\r\n    starred: 'Starred'\r\n}\r\n\r\nexport function Collection({ collection }) {\r\n    return (\r\n        <nav className=\"panel\">\r\n            <p className=\"panel-heading\">\r\n                Select a view\r\n            </p>\r\n            <p className=\"panel-tabs\">\r\n                <NavLink activeClassName='is-active' to={`/users/${collection.login}/${menus.repos}`}>Repos</NavLink>\r\n                <NavLink activeClassName='is-active' to={`/users/${collection.login}/${menus.followings}`}>Followings</NavLink>\r\n                <NavLink activeClassName='is-active' to={`/users/${collection.login}/${menus.followers}`}>Followers</NavLink>\r\n                <NavLink activeClassName='is-active' to={`/users/${collection.login}/${menus.starred}`}>Starred</NavLink>\r\n            </p>\r\n            <Route replace path={`/users/${collection.login}/${menus.repos}`} render={(props) => {\r\n                return collection.Repos.map(val => (\r\n                    <Item icon={val.fork ? <FaCodeBranch /> : null} name={val.name} key={val.id} title={val.description} link={val.html_url} />\r\n                ))\r\n            }} />\r\n\r\n            <Route replace path={`/users/${collection.login}/${menus.followings}`} render={(props) => {\r\n                return collection.Followings.map(val => (\r\n                    <Item icon={\r\n                        <figure className=\"image is-32x32\">\r\n                            <img className=\"is-rounded\" src={val.avatar_url} alt={val.login} />\r\n                        </figure>} name={val.login} key={val.id} link={val.html_url} />\r\n                ))\r\n            }} />\r\n\r\n            <Route replace path={`/users/${collection.login}/${menus.followers}`} render={(props) => {\r\n                return collection.Followers.map(val => (\r\n                    <Item icon={\r\n                        <figure className=\"image is-32x32\">\r\n                            <img className=\"is-rounded\" src={val.avatar_url} alt={val.login} />\r\n                        </figure>} name={val.login} key={val.id} link={val.html_url} />\r\n                ))\r\n            }} />\r\n\r\n            <Route replace path={`/users/${collection.login}/${menus.starred}`} render={(props) => {\r\n                return collection.Starred.map(val => (\r\n                    <Item icon={<FaStar />} name={val.name} key={val.id} link={val.html_url} />\r\n                ))\r\n            }} />\r\n        </nav>\r\n    )\r\n}\r\n\r\nconst Item = ({ name, title, link, icon }) => {\r\n    return (\r\n        <a href={link} target='_blank' className=\"panel-block\" title={title || name}>\r\n            <span>{icon || <FaBook />} </span>  &emsp;\r\n            <span className='has-text-weight-bold'>{name}</span>\r\n        </a>\r\n    )\r\n}\r\n\r\nexport default function ({ username }) {\r\n    let [ready, updateReady] = React.useState(false)\r\n    let [user, updateUser] = React.useState(null)\r\n    if (!ready || !user) {\r\n        lib.getUser(username).then(async (res) => {\r\n            user = res.data\r\n            user.Repos = (await lib.getRepos(username)).data\r\n            user.Followers = (await lib.getFollowers(username)).data\r\n            user.Followings = (await lib.getFollowing(username)).data\r\n            user.Starred = (await lib.getStarred(username)).data\r\n            updateUser(user)\r\n            updateReady(true)\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className='section'>\r\n            <Toolbar isNotFixed={ready ? false : null} noShowSearch={true} />\r\n            {ready ?\r\n                <div className='section'>\r\n                    <div className=\"media box\">\r\n                        <div className=\"media-left\">\r\n                            <figure className=\"image is-rounded is-48x48\">\r\n                                <img className='is-rounded' src={user.avatar_url} alt={user.name || 'John Doe'} />\r\n                            </figure>\r\n                        </div>\r\n                        <div className=\"media-content\">\r\n                            <p className=\"title is-4 is-capitalized\">{user.name || 'John Doe'}</p>\r\n                            <p className=\"subtitle is-6\">{`@${user.login}`}</p>\r\n                            <div className=\"content\">{user.bio || 'No bio available!'}\r\n                                <br />\r\n                                {user.email ? <a href={`mailto:${user.email}`}><FaEnvelope /> {user.email}</a> : null}\r\n                                <br />\r\n                                {user.blog ? <span><FaGlobe /> {user.blog}</span> : null}\r\n                            </div>\r\n                            <p className={`subtitle is-6 ${!user.location ? 'muted' : ''}`}><FaMapMarker />{`${user.location || 'n/a'}`}</p>\r\n                        </div>\r\n                    </div>\r\n                    <br />\r\n                    <nav className=\"level is-mobile\">\r\n                        <div className=\"level-item has-text-centered\">\r\n                            <div>\r\n                                <p className=\"heading\">Public Repos</p>\r\n                                <p className=\"title\">{user.public_repos}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"level-item has-text-centered\">\r\n                            <div>\r\n                                <p className=\"heading\">Following</p>\r\n                                <p className=\"title\">{user.following}</p>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"level-item has-text-centered\">\r\n                            <div>\r\n                                <p className=\"heading\">Followers</p>\r\n                                <p className=\"title\">{user.followers}</p>\r\n                            </div>\r\n                        </div>\r\n                    </nav>\r\n\r\n                    <Collection collection={user} />\r\n                </div>\r\n                :\r\n                <div className='box has-text-centered'>\r\n                    <progress className=\"progress is-large is-info\" max=\"100\">Please wait...</progress>\r\n                    <h3 className='title is-3'>I am currently fetching data for display!</h3>\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { ToastProvider } from 'react-toast-notifications'\r\nimport { BrowserRouter as Router } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <Router basename='/fiberweb' >\r\n        <ToastProvider placement='bottom-right' transitionDuration={250} >\r\n            <App />\r\n        </ToastProvider>\r\n    </Router>\r\n    ,\r\n    document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}